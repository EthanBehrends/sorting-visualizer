{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/Files/Programming/Projects2021/sorting-visualizer/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Element from './Element';\nimport ElementCont from './ElementCont';\nimport { Container, Button } from '@material-ui/core';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [list, setList] = useState(genArray(30));\n  const [comparisons, setComparisons] = useState(0);\n  const [selected, setSelected] = useState([]);\n\n  function swap(i, j) {\n    let newArr = list;\n    const temp = list[i];\n    newArr[i] = list[j];\n    newArr[j] = temp;\n    setList(newArr);\n  }\n\n  function bubbleSort(t) {\n    let i = 0;\n    let j = 0;\n    let compares = 0;\n\n    function step() {\n      if (i < list.length) {\n        if (j < list.length - i - 1) {\n          setSelected([j, j + 1]);\n          compares++;\n          setTimeout(() => {\n            if (list[j] > list[j + 1]) {\n              swap(j, j + 1);\n            }\n\n            j++;\n          }, t / 2);\n        } else {\n          j = 0;\n          i++;\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n\n    let inter = setInterval(() => {\n      console.log(\"Interval\");\n\n      if (!step()) {\n        clearInterval(inter);\n        setSelected([]);\n      } else {\n        setComparisons(compares);\n      }\n    }, t);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ElementCont, {\n      stats: comparisons,\n      title: \"Bubble Sort\",\n      children: list.map((x, i) => {\n        return /*#__PURE__*/_jsxDEV(Element, {\n          color: i === selected[0] || i === selected[1] ? \"#48A89E\" : undefined,\n          height: x\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Test\",\n      onClick: () => {\n        bubbleSort(50);\n      },\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"CJtstsAM4VljAHB/t2mVHcAPGnc=\");\n\n_c = App;\n\nfunction genArray(n) {\n  let ret = [];\n\n  for (let i = 0; i < n; i++) {\n    ret[i] = i * (150 / 30);\n  }\n\n  return shuffle(ret);\n}\n\nfunction shuffle(array) {\n  var currentIndex = array.length,\n      randomIndex; // While there remain elements to shuffle...\n\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--; // And swap it with the current element.\n\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ethan/Files/Programming/Projects2021/sorting-visualizer/src/App.js"],"names":["Element","ElementCont","Container","Button","useState","App","list","setList","genArray","comparisons","setComparisons","selected","setSelected","swap","i","j","newArr","temp","bubbleSort","t","compares","step","length","setTimeout","inter","setInterval","console","log","clearInterval","map","x","undefined","n","ret","shuffle","array","currentIndex","randomIndex","Math","floor","random"],"mappings":"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","sourcesContent":["import Element from './Element'\nimport ElementCont from './ElementCont'\nimport { Container, Button } from '@material-ui/core'\nimport { useState } from 'react'\n\nfunction App() {\n    const [list, setList] = useState(genArray(30));\n    const [comparisons, setComparisons] = useState(0);\n    const [selected, setSelected] = useState([]);\n\n    function swap(i,j) {\n        let newArr = list;\n        const temp = list[i];\n        newArr[i] = list[j];\n        newArr[j] = temp;\n        setList(newArr);\n    }\n\n    function bubbleSort(t) {\n        let i = 0;\n        let j = 0;\n        let compares = 0;\n        function step() {\n            if (i < list.length) {\n                if(j < list.length - i - 1) {\n                    setSelected([j,j+1]);\n                    compares++;\n                    setTimeout(() =>{\n                        if(list[j] > list[j+1]) {\n                            swap(j,j+1);\n                        }\n                        j++;\n                    },t/2);\n                }\n                else {\n                    j = 0;\n                    i++;\n                }\n                return(true);\n            }\n            return(false);\n            \n        }\n        let inter = setInterval(()=>{\n            console.log(\"Interval\");\n            if(!step()) {\n                clearInterval(inter);\n                setSelected([]);\n            }\n            else {\n                setComparisons(compares);\n            }\n        },t)\n    }\n\n    return (\n        <Container>\n            <ElementCont stats={comparisons} title=\"Bubble Sort\">\n                {\n                    list.map((x,i)=>{\n                        return(<Element color={(i === selected[0] || i === selected[1]) ? \"#48A89E\" : undefined} key={i} height={x}></Element>)\n                    })\n                }\n            </ElementCont>\n            <Button title=\"Test\" onClick={()=>{bubbleSort(50)}}>Test</Button>\n        </Container>\n    )\n}\n\nfunction genArray(n) {\n    let ret = [];\n    for(let i = 0; i < n; i++) {\n        ret[i] = i*(150/30);\n    }\n    return(shuffle(ret));\n}\n\nfunction shuffle(array) {\n    var currentIndex = array.length,  randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n  \n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n  \n    return array;\n  }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}